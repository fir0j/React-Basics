{"version":3,"sources":["components/PredictBoiling.js","components/InputTemperature.js","components/Loading.js","components/Users.js","Clock.js","index.js"],"names":["PredictBoiling","props","parseInt","temperature","InputTemperature","handleChange","e","handleChangeTemperature","c","f","this","scale","concat","value","onChange","Component","Loading","message","Users","loading","users","map","user","key","id","style","color","name","first","email","onSubmit","handleSubmitUsers","type","Clock","tick2","setState","date2","Date","handleToggleHeading","preventDefault","state","isToggleOn","target","handleSubmit","alert","handleInputChange","checked","getUsers","MultipleInputComponent","isGoing","numberOfGuests","date1","date3","tick1","bind","convert","input","parseFloat","Number","isNaN","output","Math","round","toString","fahrenheit","celsius","axios","then","response","data","results","timer1","setInterval","timer2","timer3","tick3","clearInterval","tryConvert","toCelsius","toFahrenheit","toLocaleTimeString","onClick","cursor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.791f3b4f.chunk.js","sourcesContent":["import React from 'react';\n\n// Receiving props / Lifting up state using functional(stateless) component.\n\n// METHOD 1: EXPORT REGULAR_FUNCTION\nfunction PredictBoiling(props) {\n\treturn <div>{parseInt(props.temperature) >= 100 ? 'The Water Would Boil !' : 'The Water Would not Boil.'}</div>;\n}\n\nexport default PredictBoiling;\n\n/*\n\n// METHOD 2: EXPORT ARROW_FUNCTION\n\nexport const PredictBoiling = (props) => (\n\t<div>{parseInt(props.temperature) >= 100 ? 'The Water Would Boil !' : 'The Water Would not Boil.'}</div>\n);\n\n// Receiving props / Lifting up state using class(statelessful) component\n// and while receiving props, constructor is not necessary\n\n\n// METHOD 3: EXPORT Class Component\nexport default class PredictBoiling extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>{parseInt(this.props.temperature) > 100 ? 'The Water Would Boil !' : 'The Water Would not Boil.'}</div>\n\t\t);\n\t}\n}\n\n*/\n","import React, { Component } from 'react';\nimport PredictBoiling from './PredictBoiling';\n\nclass InputTemperature extends Component {\n\thandleChange = (e) => {\n\t\tthis.props.handleChangeTemperature(e);\n\t};\n\trender() {\n\t\tconst scaleNames = {\n\t\t\tc: 'Celsius',\n\t\t\tf: 'Fahrenheit'\n\t\t};\n\t\treturn (\n\t\t\t<fieldset>\n\t\t\t\t<legend>Enter temperature in {scaleNames[this.props.scale].concat(':')}</legend>\n\t\t\t\t<input value={this.props.temperature} onChange={this.handleChange} />\n\t\t\t\t<PredictBoiling temperature={this.props.temperature} />\n\t\t\t</fieldset>\n\t\t);\n\t}\n}\n\n// function InputTemperature(props) {\n// \treturn (\n// \t\t<fieldset>\n// \t\t\t<legend>Enter temperature in Celsius:</legend>\n// \t\t\t<input value={props.temperature} onChange={(e) => props.handleChangeTemperature(e)} />\n// \t\t\t<PredictBoiling temperature={props.temperature} />\n// \t\t</fieldset>\n// \t);\n// }\n\nexport default InputTemperature;\n","import React from 'react';\n\nexport const Loading = ({ message }) => {\n\treturn <h2>{message}</h2>;\n};\n","import React from 'react';\nimport { Loading } from './Loading';\nexport const Users = (props) => {\n\treturn (\n\t\t<div>\n\t\t\t{!props.loading ? (\n\t\t\t\tprops.users.map((user) => (\n\t\t\t\t\t<div key={user.id.value}>\n\t\t\t\t\t\t<h3 style={{ color: 'red' }}>{user.name.first}</h3>\n\t\t\t\t\t\t<p>{user.email}</p>\n\t\t\t\t\t\t<hr />\n\t\t\t\t\t</div>\n\t\t\t\t))\n\t\t\t) : (\n\t\t\t\t<Loading message=\"Loading ..\" />\n\t\t\t)}\n\t\t\t<form onSubmit={props.handleSubmitUsers}>\n\t\t\t\t<input type=\"submit\" value=\"Load Users\" />\n\t\t\t</form>\n\t\t\t<hr />\n\t\t</div>\n\t);\n};\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport InputTemperature from './components/InputTemperature';\nimport { Users } from './components/Users';\n\nclass Clock extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t// state in react is said to be encapsulated or local because if state is passed down as props to other child component,\n\t\t// the child component will have no idea about from where the props is comming i.e will have no idea about who is its parent.\n\t\tthis.state = {\n\t\t\tdate1: new Date(),\n\t\t\tdate2: new Date(),\n\t\t\tdate3: new Date(),\n\t\t\tisToggleOn: true,\n\t\t\tisGoing: true,\n\t\t\tnumberOfGuests: 2,\n\t\t\tvalue: 'coconut',\n\t\t\ttemperature: '',\n\t\t\tscale: 'c',\n\t\t\tusers: [],\n\t\t\tloading: false\n\n\t\t\t//In Controlled Component, selecting coconut value by default\n\t\t\t// temperature is the lifted up state because it is needed by child component and has been passed props to it.\n\t\t};\n\t\t// binding is necessary to make 'this' keyword work inside the function\n\t\tthis.tick1 = this.tick1.bind(this);\n\t\t// from now on 'this' keyword inside the function will refer to the context of this component( ie. Clock component)\n\t}\n\n\t//REGULAR_FUCNTION_DEFINITION\n\ttick1() {\n\t\tthis.setState({\n\t\t\tdate1: new Date()\n\t\t});\n\t}\n\n\t//ARROW_FUCTION_DEFINITION\n\ttick2 = () => {\n\t\tthis.setState({\n\t\t\tdate2: new Date()\n\t\t});\n\t};\n\n\t// NOTE: above both functions are binded so are called same way and the below is not binded so is called in different way than binded functions\n\n\t//REGULAR_FUCNTION_DEFINITION_WITHOUT_BINDING\n\ttick3() {\n\t\tthis.setState({\n\t\t\tdate3: new Date()\n\t\t});\n\t}\n\n\t// ARROW_FUCNTION_DECLARATION AUTOMATICALLY get binded with window's context 'this'.No need to bind\n\t// this fuctional way of updating the state is always a good practise which takes anonomous function as argument and returns object to mutate the state.\n\t// also using event e to preventDefault behaviour is better practise\n\t// using conditional return structure but in this case not returning anyvalue\n\thandleToggleHeading = (e) => {\n\t\te.preventDefault();\n\t\tthis.setState((state, props) => ({\n\t\t\tisToggleOn: !state.isToggleOn\n\t\t}));\n\t};\n\n\t//this keyword inside arrow function always refer to windwo object/ context but this inside the regular function points to that function only\n\n\thandleChange = (e) => {\n\t\te.preventDefault();\n\t\tthis.setState({\n\t\t\tvalue: e.target.value\n\t\t});\n\t};\n\n\thandleSubmit = (e) => {\n\t\te.preventDefault();\n\t\talert('Your Favourite Flavor is:' + this.state.value);\n\t};\n\n\t// function handling multiple input change\n\n\thandleInputChange = (e) => {\n\t\tconst target = e.target;\n\t\tconst value = target.type === 'checkbox' ? target.checked : target.value;\n\t\tconst name = target.name;\n\n\t\tthis.setState({\n\t\t\t[name]: value\n\t\t});\n\t};\n\n\thandleChangeTemperature = (e) => {\n\t\tthis.setState({\n\t\t\ttemperature: e.target.value\n\t\t});\n\t};\n\n\thandleCelsiusChange(temperature) {\n\t\tthis.setState({ scale: 'c', temperature });\n\t}\n\n\thandleFahrenheitChange(temperature) {\n\t\tthis.setState({ scale: 'f', temperature });\n\t}\n\n\ttryConvert(temperature, convert) {\n\t\tconst input = parseFloat(temperature);\n\t\tif (Number.isNaN(input)) {\n\t\t\treturn '';\n\t\t}\n\t\tconst output = convert(input);\n\t\tconst rounded = Math.round(output * 1000) / 1000;\n\t\treturn rounded.toString();\n\t}\n\n\ttoCelsius(fahrenheit) {\n\t\treturn (fahrenheit - 32) * 5 / 9;\n\t}\n\n\ttoFahrenheit(celsius) {\n\t\treturn celsius * 9 / 5 + 32;\n\t}\n\n\tgetUsers() {\n\t\tthis.setState({\n\t\t\tloading: true\n\t\t});\n\n\t\taxios('https://randomuser.me/api/?results=1&inc=name,gender,email,cell, id').then((response) =>\n\t\t\tthis.setState({\n\t\t\t\tusers: [ ...this.state.users, ...response.data.results ],\n\t\t\t\tloading: false\n\t\t\t})\n\t\t);\n\t}\n\n\thandleSubmitUsers = (e) => {\n\t\te.preventDefault();\n\t\tthis.getUsers();\n\t};\n\n\t//setInterval (callback not function, interval)\n\tcomponentDidMount() {\n\t\t// caching as timers so that it can be used to clearInterval later\n\n\t\t// if you want to use javascript_regular_function_definition for your custom function instead of arrow_function_declaration ,\n\t\t// then 1) either bind it with this key in constructor OR 2) user ARROW_CALL(not good practise)\n\n\t\t// if REGULAR_FUNCTION_DEFINITION_WITH_BINDING then CALL is made like this using ARROW_CALL....(1)\n\t\tthis.timer1 = setInterval(this.tick1, 1000);\n\n\t\t// else if ARROW_FUNCTION_DEFINITION  has been used then also CALL is performed same way ....(2)\n\t\t// () doesn't exist while calling because ARROW_FUNCTION_DEFINITION has already consumed it :) .\n\t\tthis.timer2 = setInterval(this.tick2, 1000);\n\n\t\t// NOTE: In Both case (1) and (2), all the attributes related to the event is implicitly(automatically) passed to the functions\n\n\t\t// if REGULAR_FUNCTION_DEFINITION_WITHOUT_BINDING then CALL is made like this using ARROW_CALL and if event e is needed, must be passsed explicitly.\n\t\tthis.timer3 = setInterval(() => this.tick3(), 1000);\n\t\t// this is least reliable way of binding function to the context of the componenet\n\n\t\t// Passing Arguments to Event Handlers\n\t\t// PASSING ARGUMENT TO THE EVENT HANDLER is the topic in React Documentation\n\t\t// <button onClick={(e) => this.deleteRow(id, e)}>Delete Row</button>\n\t\t//\tReact event (e) must be passed explicitly as argument\n\t\t// in case of ARROW_CALL if you want to make use of attributes like value, style etc. from the corresponding event.\n\t\t// IF YOU NEED TO PASS multiple ARGUMENTS TO DURING ARROW_CALL, MAKE SURE REACT_EVENT e IS PASSED AS SECOND ARGUMENT.\n\t\tthis.getUsers();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.timer1);\n\t\tclearInterval(this.timer2);\n\t\tclearInterval(this.timer3);\n\t}\n\n\t//CONTROLLED COMPONENT\n\t// using single return structure of functional component\n\tMultipleInputComponent = () => (\n\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t<label>\n\t\t\t\tIs going:\n\t\t\t\t<input name=\"isGoing\" type=\"checkbox\" checked={this.state.isGoing} onChange={this.handleInputChange} />\n\t\t\t</label>\n\t\t\t<br />\n\t\t\t<label>\n\t\t\t\tNumber of guests:\n\t\t\t\t<input\n\t\t\t\t\tname=\"numberOfGuests\"\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tvalue={this.state.numberOfGuests}\n\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t/>\n\t\t\t</label>\n\t\t\t<br />\n\t\t\t<br />\n\t\t\t<label>\n\t\t\t\tPick your favorite flavor:\n\t\t\t\t<select value={this.state.value} onChange={this.handleChange}>\n\t\t\t\t\t<option value=\"grapefruit\">Grapefruit</option>\n\t\t\t\t\t<option value=\"lime\">Lime</option>\n\t\t\t\t\t<option value=\"coconut\">Coconut</option>\n\t\t\t\t\t<option value=\"mango\">Mango</option>\n\t\t\t\t</select>\n\t\t\t</label>\n\t\t\t<input type=\"submit\" value=\"Submit\" />\n\t\t</form>\n\t);\n\n\t//this life cycle method of react component always refers to the this.state\n\t//for any data to render and executes whenever setState() is called for updating state.\n\trender() {\n\t\tconst scale = this.state.scale;\n\t\tconst temperature = this.state.temperature;\n\t\tconst celsius = scale === 'f' ? this.tryConvert(temperature, this.toCelsius) : temperature;\n\t\tconst fahrenheit = scale === 'c' ? this.tryConvert(temperature, this.toFahrenheit) : temperature;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<center>\n\t\t\t\t\t<h1>React Documentation Tutorial</h1>\n\n\t\t\t\t\t<hr />\n\t\t\t\t\t<h3>1. States</h3>\n\t\t\t\t\t<hr />\n\t\t\t\t\t<h2> timer1(Binded Explicitly)</h2>\n\t\t\t\t\t<h2>It is {this.state.date1.toLocaleTimeString()}.</h2>\n\t\t\t\t\t<h2> timer2(Binded implicitly with Arrow Function)</h2>\n\t\t\t\t\t<h2>It is {this.state.date2.toLocaleTimeString()}.</h2>\n\t\t\t\t\t<h2> timer3(Not Binded) (is the way which i and Andrie prefer the most) </h2>\n\t\t\t\t\t<h2>It is {this.state.date3.toLocaleTimeString()}.</h2>\n\t\t\t\t\t<hr />\n\n\t\t\t\t\t<hr />\n\t\t\t\t\t<h3>2. Event Handlers</h3>\n\t\t\t\t\t{/* react EventListener are always camelCase */}\n\t\t\t\t\t<button onClick={this.handleToggleHeading} style={{ cursor: 'pointer' }}>\n\t\t\t\t\t\t{this.state.isToggleOn ? (\n\t\t\t\t\t\t\t'Toggle Me :Way to call function of various function_definition'\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t'Show Heading'\n\t\t\t\t\t\t)}\n\t\t\t\t\t</button>\n\t\t\t\t\t<hr />\n\n\t\t\t\t\t<hr />\n\t\t\t\t\t<h3>3. Controlled Components</h3>\n\t\t\t\t\t{this.MultipleInputComponent()}\n\t\t\t\t\t<hr />\n\n\t\t\t\t\t<hr />\n\t\t\t\t\t<h2>\n\t\t\t\t\t\tAn Awesome way for child component to access and update state in parent component and also\n\t\t\t\t\t\tcalled Dispatching action\n\t\t\t\t\t</h2>\n\t\t\t\t\t<InputTemperature\n\t\t\t\t\t\tscale=\"c\"\n\t\t\t\t\t\ttemperature={celsius}\n\t\t\t\t\t\thandleChangeTemperature={this.handleChangeTemperature}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<InputTemperature\n\t\t\t\t\t\tscale=\"f\"\n\t\t\t\t\t\ttemperature={fahrenheit}\n\t\t\t\t\t\thandleChangeTemperature={this.handleChangeTemperature}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<hr />\n\t\t\t\t\t<h3>LIFTING STATE UP or making SINGLE SOURCE OF TRUTH or finding COMMON_PARENT</h3>\n\t\t\t\t\t<h3>\n\t\t\t\t\t\t<li>Lifting up state means first passing state as props to the child component </li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\tgetting the value from the child component as argument to the function passed as props to\n\t\t\t\t\t\t\tthe child component.\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li> so that the function can update the state in parent component</li>\n\t\t\t\t\t\t<li> and then again that updated state is passed as props to the child component to render </li>\n\t\t\t\t\t</h3>\n\t\t\t\t\t<hr />\n\t\t\t\t\t<Users\n\t\t\t\t\t\tusers={this.state.users}\n\t\t\t\t\t\thandleSubmitUsers={this.handleSubmitUsers}\n\t\t\t\t\t\tloading={this.state.loading}\n\t\t\t\t\t/>\n\t\t\t\t</center>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Clock;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Clock from './Clock';\n\nReactDOM.render(<Clock />, document.getElementById('root'));\n"],"sourceRoot":""}